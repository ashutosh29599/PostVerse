{
	"info": {
		"_postman_id": "43d960ae-c87d-4686-a063-2115d7e31e54",
		"name": "PostVerse API",
		"description": "Version: v0.3.0\n\nWelcome to the Postverse API, a RESTful service designed for the PostVerse social platform. This article describes what the PostVerse API has to offer.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24526531"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "User Registration",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test_user\",\n    \"email\": \"test_user@domain.com\",\n    \"password1\": \"super_secret_pwd_1\",\n    \"password2\": \"super_secret_pwd_1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/accounts/register/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"accounts",
								"register",
								""
							]
						},
						"description": "This endpoint allows new users to register by providing a username, password, and email. Upon successful registration, the user’s information is stored, and the user can then authenticate using their credentials.\n\n- **Method:** `POST`\n    \n- **Path:** `/api/accounts/register/`\n    \n- **Requires:** `username`, `password`, `email`\n    \n- **Response:** Success message or Errors"
					},
					"response": []
				},
				{
					"name": "Get Access & Refresh Tokens",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"test_user\",\n    \"password\": \"super_secret_pwd_1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/accounts/token/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"accounts",
								"token",
								""
							]
						},
						"description": "This endpoint is used for authenticating an existing user. It returns a pair of tokens—an access token and a refresh token—which can be used for making authenticated API requests.\n\n- **Method:** `POST`\n    \n- **Path:** `/api/accounts/token/`\n    \n- **Requires:** `username`, `password`\n    \n- **Response:** Access Token & Refresh Token"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTcyNjQzNTgwOCwiaWF0IjoxNzI2NDM0MDA4LCJqdGkiOiJlZDVkOTE4OTI0NWY0ZWFhODMxMjAwNTcwNDE4NmIxOSIsInVzZXJfaWQiOjV9.vMlNm3oh5ZoMhcOVS-70rbqEWXrHJh4AoCHbkq1v-_w",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": <access-token>\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/accounts/token/refresh/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"accounts",
								"token",
								"refresh",
								""
							]
						},
						"description": "This endpoint allows users to refresh their access token using a valid refresh token. This enables continuous access without requiring the user to re-authenticate, enhancing security and usability.\n\n- **Method:** `POST`\n    \n- **Path:** `/api/accounts/token/refresh/`\n    \n- **Requires:** Refresh Token granted during login\n    \n- **Response:** A new Access Token"
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzI2NTIwNDA4LCJpYXQiOjE3MjY0MzQwMDgsImp0aSI6ImRhMDgwZTgxYmQ1YjQzMWZiOTM1MDAyYjZiZTRlY2RhIiwidXNlcl9pZCI6NX0.JmmWxj66BXqOjvLV2hJJqC_oLPOQcgIXILWWk0jbqf4",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"old_password\": \"super_secret_pwd_1\",\n    \"new_password1\": \"new_secret_pwd1\",\n    \"new_password2\": \"new_secret_pwd1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/accounts/change-password/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"accounts",
								"change-password",
								""
							]
						},
						"description": "This endpoint allows authenticated users to change their password. Users must provide their current password and confirm the new password. The new password is validated and updated upon success\n\n- **Method:** `PUT`\n    \n- **Path:** `/api/change-password/`\n    \n- **Requires:** `old_password`, `new_password1`, `new_password2`\n    \n- **Response:** Success message indicating password change"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzI2NTIwNjYxLCJpYXQiOjE3MjY0MzQyNjEsImp0aSI6ImIzMWY3YmI0YzAzOTQ2NzBiMDc3YjI2N2ZkYmJmZjY5IiwidXNlcl9pZCI6Nn0.fryze88GLVDasqfT_8EYboAAEgH3oGAj1wvnIxP1kFU",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/accounts/delete-user/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"accounts",
								"delete-user",
								""
							]
						},
						"description": "This endpoint allows authenticated users to delete their account. Users must be logged in.\n\n- **Method:** `DELETE`\n    \n- **Path:** `/api/delete-user/`\n    \n- **Requires:** Access token granted during login\n    \n- **Response:** Successful user deletion message"
					},
					"response": []
				}
			],
			"description": "This sections contains all user authentication and account management functionalities in the PostVerse API. These endpoints enable developers to integrate secure user registration, authentication, token management, and password change into their applications. Using JWT (JSON Web Tokens), this API ensures secure and efficient user authentication workflows, while providing methods for users to manage their own credentials.\n\n#### Endpoints\n\n1. Register a New User: Allows users to sign up by providing a username, password, and email.\n    \n2. Obtain Access and Refresh Token (Login): Authenticates users and returns tokens for secure API access.\n    \n3. Refresh Token: Generates a new access token using a valid refresh token.\n    \n4. Change Password: Allows authenticated users to change their passwords securely."
		},
		{
			"name": "Profiles",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/profiles/profile/test_user/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"profiles",
								"profile",
								"test_user",
								""
							]
						},
						"description": "This endpoint allows users to fetch any user's profile. Users must provide the username of the user whose profile details they wish to fetch.\n\n- **Method:** `GET`\n    \n- **Path:** `api/profiles/profile/test_user/`\n    \n- **Requires:** Profile owner's username\n    \n- **Response:** Profile details (first name, last name, bio, photo)"
					},
					"response": []
				},
				{
					"name": "Edit User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzI2NTIwNDA4LCJpYXQiOjE3MjY0MzQwMDgsImp0aSI6ImRhMDgwZTgxYmQ1YjQzMWZiOTM1MDAyYjZiZTRlY2RhIiwidXNlcl9pZCI6NX0.JmmWxj66BXqOjvLV2hJJqC_oLPOQcgIXILWWk0jbqf4",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user\": <user_id>,\n    \"first_name\": \"Test\",\n    \"last_name\": \"User\",\n    \"bio\": \"This is the test bio!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/profiles/edit_profile/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"profiles",
								"edit_profile",
								""
							]
						},
						"description": "This endpoint allows authenticated users to update their profile.\n\n- **Method:** `PATCH`\n    \n- **Path:** `api/profiles/edit_profile/`\n    \n- **Requires:** Authenticated user's user id\n    \n- **Response:** Success/Failure message"
					},
					"response": []
				}
			],
			"description": "This sections contains all user profile management functionalities in the PostVerse API. These endpoints enable developers to integrate user profile fetching and secure user profile updation functionalities in their applications.\n\n#### Endpoints\n\n1. Fetching a User Profile: Allows users to visit a user's profile by providing the user's username.\n    \n2. Updating a User Profile: Allows authenticated users to update their profile."
		}
	]
}